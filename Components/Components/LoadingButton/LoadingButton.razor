@namespace CrahunComponents

<button disabled="@IsLoading" @onclick="@(async () => await OnClick.InvokeAsync())" @attributes="AdditionalProperties">
    @if (IsLoading)
    {
        if (LoadingTemplate is not null)
        {
            @LoadingTemplate
        }
        else
        {
            <div class="d-flex">
                <span class="spinner-border ms-auto me-auto" role="status" style="color: lightgray">
                    <span class="sr-only">Loading...</span>
                </span>
            </div>
        }
    }

    else
    {
        @ButtonTextTemplate;
    }
</button>

@code {
    [Parameter]
    public bool IsLoading { get; set; }

    [Parameter]
    public EventCallback<bool> IsLoadingChanged { get; set; }

    [Parameter]
    public RenderFragment ButtonTextTemplate { get; set; }

    [Parameter]
    public RenderFragment LoadingTemplate { get; set; }

    [Parameter]
    public EventCallback<bool> OnClick { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> AdditionalProperties { get; set; }
}
