<CascadingValue Value="this" Name="Parent" IsFixed="true">
    @ChildContent
</CascadingValue>

<div class="card wizard-card-no-shadow" data-color="red" id="wizard">
    <div class="wizard-header">
        <h3 class="wizard-title h3-wizard">@Title</h3>
    </div>
    <div>
        <div class="wizard-navigation">
            <ul class="nav nav-pills nav-justified" style="margin-bottom: 1.5em">
                @{
                    for (int i = 1; i <= Steps.Count; i++)
                    {
                        int i_local = i;

                        <li class="nav-item" @key="i">
                            <a class="nav-link @(currentStep == i ? "active-nav" : "")"
                               style="cursor: pointer" @onclick="@(() => SetActivePage(i_local))">Step @i</a>
                        </li>
                    }
                }
            </ul>
        </div>
        <div id="container-fluid">
            <div id="tab-content">
                @{
                    for (int i = 1; i <= Steps.Count; i++)
                    {
                        var step = Steps[i - 1];

                        if (currentStep == i)
                        {
                            @step.ChildContent;
                        }
                    }
                }
            </div>
        </div>
    </div>

    <div class="wizard-footer">
        <div class="pull-left">
            <button class="btn-wizard btn-wizard-previous btn-wizard-fill btn-wizard-default btn-wizard-wd" type="button" @onclick="@OnPreviousEvent" disabled="@IsFirstStep()">Previous</button>
        </div>

        @if (IsLastStep())
        {
            <div class="pull-right">
                <button class="btn-wizard btn-wizard-next btn-wizard-fill btn-wizard-danger btn-wizard-wd" type="button" @onclick="@OnFinished">Finished</button>
            </div>
        }
        else
        {
            <div class="pull-right">
                <button class="btn-wizard btn-wizard-next btn-wizard-fill btn-wizard-danger btn-wizard-wd" type="button" @onclick="@OnNextEvent">Next</button>
            </div>
        }
        <div class="clearfix"></div>
    </div>
</div>

@code {

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public EventCallback OnPrevious { get; set; }

    [Parameter]
    public EventCallback OnNext { get; set; }

    [Parameter]
    public EventCallback OnFinished { get; set; }

    private List<Step> Steps = new List<Step>();
    private int currentStep = 1;

    public void AddStep(Step step)
    {
        Steps.Add(step);
        StateHasChanged();
    }

    public bool IsFirstStep() => currentStep == 1;
    public bool IsLastStep() => currentStep == Steps.Count;

    public void SetActivePage(int currentIndex)
    {
        currentStep = currentIndex;
        StateHasChanged();
    }

    public void OnNextEvent()
    {
        currentStep++;
        OnNext.InvokeAsync();
        StateHasChanged();
    }

    public void OnPreviousEvent()
    {
        currentStep--;
        OnPrevious.InvokeAsync();
        StateHasChanged();
    }

    public void OnFinishedEvent()
    {
        OnFinished.InvokeAsync();
        StateHasChanged();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            currentStep = 1;
            StateHasChanged();
        }
    }
}
